FROM ubuntu:18.04


RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    curl \
    g++ \
    gcc \
    git \
	wget \
	nano \
	unzip \
	zip \
  && rm -rf /var/lib/apt/lists/*
 

ARG USE_PYTHON_3_NOT_2=True
ARG _PY_SUFFIX=3
ARG PYTHON=python${_PY_SUFFIX}
ARG PIP=pip${_PY_SUFFIX}

# # See http://bugs.python.org/issue19846
ENV LANG C.UTF-8

RUN apt-get update && apt-get install -y \
    ${PYTHON} \
    ${PYTHON}-dev \
    ${PYTHON}-pip

RUN DEBIAN_FRONTEND=noninteractive apt install -y tzdata

RUN ${PIP} --no-cache-dir install --upgrade \
    pip \
    setuptools
   
# Some TF tools expect a "python" binary
RUN ln -s $(which ${PYTHON}) /usr/local/bin/python 

RUN apt-get update && apt-get install -y \
    libopencv-dev \
    python3-opencv

RUN ${PIP} --no-cache-dir install \
    opencv-python

# Początek sekcji narzędziowej, dla zmniejszenia dockera można usunąć.
# --------------------

RUN ${PIP} --no-cache-dir install jupyter

RUN ${PIP} --no-cache-dir install \
    jupyter \
    Pillow \
    h5py \
    numpy \
    pandas \
    matplotlib \
    mock \
    scikit-image \
    sklearn \
    wget \
    tqdm \
    albumentations \
    enum34 --upgrade

# --------------------
# koniec sekcji anrzędziowej
    
WORKDIR /yolo
RUN mkdir darknet
COPY darknet /yolo/darknet/


# Poniższa sekcja służy do konfiguracji kompilacji yolo
RUN cd darknet \
&& sed -i 's/OPENCV=0/OPENCV=1/' Makefile \
&& sed -i 's/LIBSO=0/LIBSO=1/' Makefile \
&& sed -i 's/OPENMP=0/OPENMP=1/' Makefile \
&& sed -i 's/AVX=0/AVX=1/' Makefile \
&& make

RUN cd /yolo && mkdir models
COPY models /yolo/models/
WORKDIR /yolo/darknet
EXPOSE 8888
